<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandBus_DuplicateHandler" xml:space="preserve">
    <value>The command handler '{0}' cannot be used because an existing one is already registered for the command type '{1}'.</value>
  </data>
  <data name="CommandBus_InvalidHandler" xml:space="preserve">
    <value>Command handler '{0}' does not implement ICommandHandler or IAsyncCommandHandler generic interfaces.</value>
  </data>
  <data name="CommandBus_MissingReturnHandler" xml:space="preserve">
    <value>The command handler '{0}' does not implement the required interface ICommandHandler&lt;{1}, {2}&gt; or IAsyncCommandHandler&lt;{1}, {2}&gt; to return the value expected by the command execution.</value>
  </data>
  <data name="ConfigProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{0}' is not based on MSBuild. Configuration-specific properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{0}' for configuration '{1}' on project '{2}' which is not based on MSBuild. Configuration-specific user properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigUserProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{0}' is not based on MSBuild. Configuration-specific properties for '{1}' cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigUserProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{0}' for configuration '{1}' on project '{2}' which is not based on MSBuild. Configuration-specific user properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ItemProperties_InvalidNullValue" xml:space="preserve">
    <value>Cannot set null value for item property {0}.</value>
  </data>
  <data name="ProjectContainerNode_TemplateNotFound" xml:space="preserve">
    <value>The template {0} ({1}) could not be found</value>
  </data>
  <data name="ProjectContainerNode_UnfoldTemplateFailed" xml:space="preserve">
    <value>Failed to unfold template {0} ({1})</value>
  </data>
  <data name="ProjectItemContainerNode_ItemNotFound" xml:space="preserve">
    <value>Failed to find {0} in {1}</value>
  </data>
  <data name="ProjectNode_AddFolderFailed" xml:space="preserve">
    <value>Failed to add folder {0} to {1}.</value>
  </data>
  <data name="ProjectNode_AddFolderNotSupported" xml:space="preserve">
    <value>Creating project folders is not supported by project {0}. Failed to create folder {1}.</value>
  </data>
  <data name="ProjectNode_AddProjectReferenceFailed" xml:space="preserve">
    <value>Failed to add project reference {0} to {1}.</value>
  </data>
  <data name="ProjectNode_AddProjectReferenceNotSupported" xml:space="preserve">
    <value>Adding project reference is not supported by project {0}.</value>
  </data>
  <data name="ServiceLocator_MissingDependency" xml:space="preserve">
    <value>Required dependency '{0}' was not found.</value>
  </data>
  <data name="SolutionExplorerNode_SelectionUnsupported" xml:space="preserve">
    <value>Selecting element '{0}' is not supported by the underlying project type.</value>
  </data>
  <data name="SolutionNode_InvalidSolutionFile" xml:space="preserve">
    <value>The solution file '{0}' is invalid.</value>
  </data>
  <data name="UserProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{0}' is not based on MSBuild. User properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="UserProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{0}' on project '{1}' which is not based on MSBuild. User properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="VsServiceLocator_NoInstanceForContract" xml:space="preserve">
    <value>Could not locate any instances of contract {0}.</value>
  </data>
  <data name="VsCommandExtensionAdapter_CannotExecute" xml:space="preserve">
    <value>Attempted to execute command '{0}' ({1}) but current command status does not allow it.</value>
  </data>
  <data name="VsCommandExtensionAdapter_ExecuteShieldMessage" xml:space="preserve">
    <value>Command did not execute successfully due to an unexpected exception. Please check the output window for additional information.</value>
  </data>
  <data name="VsCommandExtensionAdapter_ExecutingCommand" xml:space="preserve">
    <value>Executing command '{0}' ({1}).</value>
  </data>
  <data name="VsCommandExtensionAdapter_QueryStatusShieldMessage" xml:space="preserve">
    <value>Command could not determine its current status due to an unexpected exception. Please check the output window for additional information.</value>
  </data>
  <data name="OutputWindowManager_FailedToCreatePane" xml:space="preserve">
    <value>Failed to create output window pane '{0}'.</value>
  </data>
  <data name="OutputWindowManager_CreatingPane" xml:space="preserve">
    <value>Creating output pane '{0}' since it doesn't exist already.</value>
  </data>
  <data name="OutputWindowManager_RetrievingPane" xml:space="preserve">
    <value>Retrieving potentially existing output pane '{0}'.</value>
  </data>
  <data name="OutputWindowManager_TraceInitializing" xml:space="preserve">
    <value>Initializing trace output pane '{0}'.</value>
  </data>
  <data name="SettingsManager_CannotSaveAsString" xml:space="preserve">
    <value>Cannot persist setting value of type '{0}' from property '{1}.{2}'. An appropriate type converter that can convert the value to a string is required.</value>
  </data>
  <data name="SettingsManager_FailedToRead" xml:space="preserve">
    <value>Failed to read settings class '{0}' from the settings store.</value>
  </data>
  <data name="SettingsManager_InvalidValue" xml:space="preserve">
    <value>Cannot assign value of type '{0}' to property '{1}.{2}' of type '{4}'. An appropriate type converter is required.</value>
  </data>
  <data name="CommandRegistrar_ErrorImportingCommandForPackage" xml:space="preserve">
    <value>An error occured trying to import the commands for the VS Package '{0}'</value>
  </data>
</root>