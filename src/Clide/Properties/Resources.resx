<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandManager_CommandAttributeMissing" xml:space="preserve">
    <value>In order to register command instance '{command}', it must have a [Command] attribute.</value>
  </data>
  <data name="CommandManager_CommandFilterAttributeMissing" xml:space="preserve">
    <value>In order to register command filter instance '{filter}', it must have a [CommandFilter] attribute.</value>
  </data>
  <data name="CommandManager_OwningPackageAttributeRequired" xml:space="preserve">
    <value>Command type '{type}' does not have the required attribute '{attribute}'.</value>
  </data>
  <data name="CommandManager_OwningPackageNotFound" xml:space="preserve">
    <value>Command type '{type}' specifies owning package with id '{packageId}' but it could not be found or loaded.</value>
  </data>
  <data name="CommandManager_OwningPackageNotServiceProvider" xml:space="preserve">
    <value>Command type '{type}' specifies owning package with id '{packageId}' which is not a valid service provider.</value>
  </data>
  <data name="CommandManager_PackageGuidMissing" xml:space="preserve">
    <value>In order to register all commands for a given package automatically, the owning package '{package}' must have a [Guid] attribute applied, which must match the commands' corresponding [Command] attribute.</value>
  </data>
  <data name="Diagnostics_FailedToCreateOutputWindow" xml:space="preserve">
    <value>Failed to create output window for diagnostics traces.</value>
  </data>
  <data name="Hosting_UnsupportedRuntime" xml:space="preserve">
    <value>Unsupported Visual Studio version. Please update Clide.</value>
  </data>
  <data name="Host_FailedToInitialize" xml:space="preserve">
    <value>Failed to initialize host.</value>
  </data>
  <data name="General_MissingGuidAttribute" xml:space="preserve">
    <value>Hosting package '{packageType}' does not have the required [Guid] attribute.</value>
  </data>
  <data name="OptionsManager_FailedToRegisterPage" xml:space="preserve">
    <value>Failed to register page '{pageType}'.</value>
  </data>
  <data name="OptionsManager_ManagedPackageRequired" xml:space="preserve">
    <value>The owning package of a page must be a managed package, inheriting from '{managedPackageBaseType}'.</value>
  </data>
  <data name="OptionsManager_OwningPackageNotFound" xml:space="preserve">
    <value>Options page specified package owner with Guid '{owningPackageGuid}', but the package could not be found or loaded.</value>
  </data>
  <data name="OptionsManager_OwningPackageRequired" xml:space="preserve">
    <value>Options page of type '{pageType}' does not provide the required '{owningPackageAttributeType}' attribute.</value>
  </data>
  <data name="OptionsManager_PageCategoryRequired" xml:space="preserve">
    <value>Options page '{pageType}' must have a Category attribute that specifies the name of the root category node this page shows under in the Tools | Options dialog.</value>
  </data>
  <data name="OptionsManager_PageDisplayNameRequired" xml:space="preserve">
    <value>Options page '{pageType}' must have a DisplayName attribute that determines the name of the node under the specified category in the Tools | Options dialog tree.</value>
  </data>
  <data name="OptionsManager_Unsupported" xml:space="preserve">
    <value>Tools options pages are not supported in this version of Visual Studio.</value>
  </data>
  <data name="Trace_OutputPaneTitle" xml:space="preserve">
    <value>Clide</value>
  </data>
  <data name="SettingsManager_CannotSaveAsString" xml:space="preserve">
    <value>Cannot persist setting value of type '{valueType}' from property '{owningType}.{propertyName}'. An appropriate type converter that can convert the value to a string is required.</value>
  </data>
  <data name="SettingsManager_FailedToRead" xml:space="preserve">
    <value>Failed to read settings class '{settingsType}' from the settings store.</value>
  </data>
  <data name="SettingsManager_InvalidValue" xml:space="preserve">
    <value>Cannot assign value of type '{valueType}' to property '{owningType}.{propertyName}' of type '{propertyType}'. An appropriate type converter is required.</value>
  </data>
  <data name="Settings_AlreadyInitialized" xml:space="preserve">
    <value>Object has already been initialized.</value>
  </data>
  <data name="Settings_EndEditWithoutBeginEdit" xml:space="preserve">
    <value>EndEdit invoked without corresponding BeginEdit.</value>
  </data>
  <data name="Settings_EndInitWithoutBeginInit" xml:space="preserve">
    <value>EndInit invoked without corresponding BeginInit.</value>
  </data>
  <data name="Settings_FailedToRestore" xml:space="preserve">
    <value>Failed to restore original state when editing was cancelled.</value>
  </data>
  <data name="Settings_TraceSaved" xml:space="preserve">
    <value>Settings successfully saved.</value>
  </data>
  <data name="SolutionNode_InvalidSolutionFile" xml:space="preserve">
    <value>The solution file is invalid.</value>
  </data>
  <data name="VsCommandExtensionAdapter_CannotExecute" xml:space="preserve">
    <value>Attempted to execute command '{commandText}' ({commandType}) but current command status does not allow it.</value>
  </data>
  <data name="VsCommandExtensionAdapter_ExecuteShieldMessage" xml:space="preserve">
    <value>Command did not execute successfully due to an unexpected exception. Please check the output window for additional information.</value>
  </data>
  <data name="VsCommandExtensionAdapter_ExecutingCommand" xml:space="preserve">
    <value>Executing command '{commandText}' ({commandType}).</value>
  </data>
  <data name="VsCommandExtensionAdapter_QueryStatusShieldMessage" xml:space="preserve">
    <value>Command could not determine its current status due to an unexpected exception. Please check the output window for additional information.</value>
  </data>
  <data name="ConfigProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{project}' is not based on MSBuild. Configuration-specific properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="SolutionTreeNode_SelectionUnsupported" xml:space="preserve">
    <value>Selecting element '{itemPath}' is not supported by the underlying project type.</value>
  </data>
  <data name="IProjectNodeExtensions_BuildNoSolution" xml:space="preserve">
    <value>The specified project '{project}' does not have a valid owning solution.</value>
  </data>
  <data name="IProjectNodeExtensions_FailedToLoadAssembly" xml:space="preserve">
    <value>Failed to load assemly reference '{reference}' from path '{path}'.</value>
  </data>
  <data name="IProjectNodeExtensions_InvalidTypeContext" xml:space="preserve">
    <value>Could not retrieve the required type discovery services from the project.</value>
  </data>
  <data name="IProjectNodeExtensions_InvalidVsContext" xml:space="preserve">
    <value>Cannot retrieve project types. Project is not a valid Visual Studio project, or the service provider cannot be retrieved from it.</value>
  </data>
  <data name="IProjectNodeExtensions_NoBuildOutput" xml:space="preserve">
    <value>Building project '{projectName}' did not generate the expected output assembly '{assemblyFile}'.</value>
  </data>
  <data name="IProjectNodeExtensions_NoTargetAssemblyName" xml:space="preserve">
    <value>Could not determine the output assembly path for project '{projectName}'.</value>
  </data>
  <data name="DevEnvFactory_CompositionErrors" xml:space="preserve">
    <value>Composition errors prevented the successfull creation of the development environment API. All {primaryRejectionCount} primary rejection errors will be logged.</value>
  </data>
  <data name="DevEnvFactory_CreatingComposition" xml:space="preserve">
    <value>Initializing development environment composition.</value>
  </data>
  <data name="IServiceProviderExtensions_MissingGuidAttribute" xml:space="preserve">
    <value>Specified package type '{packageType}' does not have the required [Guid] attribute.</value>
  </data>
  <data name="DevEnvFactory_ClideCantBeMefComponent" xml:space="preserve">
    <value>{clideAssembly} cannot be exported as a MEF component in the hosting extension manifest.</value>
  </data>
  <data name="DevEnvFactory_ClideComponentAlsoMefComponent" xml:space="preserve">
    <value>The following assemblies are specified as both Clide components and MEF components in the package manifest '{packageManifest}': {assemblies}. This is typically an error and could result in duplicate exports to the global composition container in Visual Studio. If you want to export some components only as MEF components or Clide components, place them in separate assemblies and configure them separately in the manifest.</value>
  </data>
  <data name="DevEnvFactory_ClideComponentNotFound" xml:space="preserve">
    <value>The extension manifest file '{packageManifest}' specified a Clide component '{clideComponent}' that was not found at '{assemblyFile}'.</value>
  </data>
  <data name="DevEnvFactory_ClideNotNecessaryAsComponent" xml:space="preserve">
    <value>The Clide main assembly does not need to be added as Clide component in the extension manifest file '{packageManifest}'.</value>
  </data>
  <data name="OptionsManager_ShellReferenceNotFound" xml:space="preserve">
    <value>Could not find reference to Microsoft.VisualStudio.Shell (either 10.0 or 11.0) on the given package type {packageType}.</value>
  </data>
  <data name="CommandManager_CommandInterceptorAttributeMissing" xml:space="preserve">
    <value>In order to register command interceptor instance '{interceptor}', it must have a [CommandInterceptor] attribute.</value>
  </data>
  <data name="CommandManager_CommandNotFound" xml:space="preserve">
    <value>Package '{packageId}' does not provide a command with group identifier '{groupId}' and command identifier '{commandId}'.</value>
  </data>
  <data name="CommandManager_CommandNotOle" xml:space="preserve">
    <value>Command to filter does not provide the required BeforeQueryStatus event (typically inherited from OleMenuCommand). Filtering cannot be performed. (Package Id: '{packageId}', Group Id: '{groupId}', Command Id '{commandId}')</value>
  </data>
  <data name="CommandManager_CommandPackageNotServiceProvider" xml:space="preserve">
    <value>Loaded package with identifier '{packageId}' that owns the command to filter is not a service provider.</value>
  </data>
  <data name="CommandManager_CommandRegistered" xml:space="preserve">
    <value>Registered command {0}.</value>
  </data>
  <data name="CommandManager_FilterFailed" xml:space="preserve">
    <value>Command filter {filter} caused an unexpected exception: {exception}.</value>
  </data>
  <data name="CommandManager_InterceptorFailed" xml:space="preserve">
    <value>Command interceptor {interceptor} caused an unexpected exception: {exception}.</value>
  </data>
  <data name="CommandManager_NoMenuCommandService" xml:space="preserve">
    <value>Could not retrieve the menu command service from the package with identifier '{packageId}' that owns the command to filter.</value>
  </data>
  <data name="DevEnvFactory_ClideComponentDeclared" xml:space="preserve">
    <value>Found Clide component '{component}' to register for composition at '{componentAssembly}'.</value>
  </data>
  <data name="DevEnvFactory_DetectedInstallPath" xml:space="preserve">
    <value>Detected hosting package installation path at '{installPath}'.</value>
  </data>
  <data name="DevEnvFactory_ExtensionManifestFound" xml:space="preserve">
    <value>Extension manifest for hosting package found at '{manifestFile}'.</value>
  </data>
  <data name="DevEnvFactory_ExtensionManifestNotFound" xml:space="preserve">
    <value>Extension manifest for hosting package not found at expected location '{manifestFile}'.</value>
  </data>
  <data name="ComponentModelExtensions_ExportProviderIsNotCompositionService" xml:space="preserve">
    <value>The given export provider '{provider}' does not implement the required ICompositionService interface.</value>
  </data>
  <data name="CommandManager_DuplicateCommand" xml:space="preserve">
    <value>Command with id '{id}' and group '{group}' has already been registered with the menu command service.</value>
  </data>
  <data name="IProjectNodeExtensions_BuildException" xml:space="preserve">
    <value>Failed to invoke build.</value>
  </data>
  <data name="ISolutionNodeExtensions_BuildException" xml:space="preserve">
    <value>Failed to invoke build.</value>
  </data>
  <data name="ISolutionNodeExtensions_BuildNotSupported" xml:space="preserve">
    <value>The specified solution does not support builds.</value>
  </data>
  <data name="CompositionSource_ImportManyRequired" xml:space="preserve">
    <value>In order to retrieve the multiple components of type {componentType} from Visual Studio composition, the [ImportMany] annotation has to be used.</value>
  </data>
  <data name="OutputWindowManager_FailedToCreatePane" xml:space="preserve">
    <value>Failed to create output window pane '{title}'.</value>
  </data>
  <data name="OutputWindowManager_CreatingPane" xml:space="preserve">
    <value>Creating output pane '{title}' since it doesn't exist already.</value>
  </data>
  <data name="OutputWindowManager_RetrievingPane" xml:space="preserve">
    <value>Retrieving potentially existing output pane '{title}'.</value>
  </data>
  <data name="OutputWindowManager_TraceInitializing" xml:space="preserve">
    <value>Initializing trace output pane '{title}'.</value>
  </data>
  <data name="Trace_RootSource" xml:space="preserve">
    <value>Clide</value>
  </data>
  <data name="Trace_OutputPaneId" xml:space="preserve">
    <value>66893206-0EF5-4A16-AA10-6EC6B6319F92</value>
  </data>
  <data name="UserProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{project}' is not based on MSBuild. User properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="UserProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{property}' on project '{project}' which is not based on MSBuild. User properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{property}' for configuration '{configuration}' on project '{project}' which is not based on MSBuild. Configuration-specific user properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigUserProjectProperties_NonMsBuildProject" xml:space="preserve">
    <value>Project '{project}' is not based on MSBuild. Configuration-specific properties for '{configuration}' cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ConfigUserProjectProperties_SetNonMsBuildProject" xml:space="preserve">
    <value>Attempted to set property '{property}' for configuration '{configuration}' on project '{project}' which is not based on MSBuild. Configuration-specific user properties cannot be retrieved or set using the standard dynamic properties.</value>
  </data>
  <data name="ISolutionExplorerNodeExtensions_NotAncestor" xml:space="preserve">
    <value>Node '{ancestor}' is not an ancestor of '{descendent}'.</value>
  </data>
  <data name="IProjectNodeExtensions_NotMsBuildProject" xml:space="preserve">
    <value>The specified project '{project}' cannot be adapted to an MSBuild project, required to retrieve its evaluated intermediate output path.</value>
  </data>
  <data name="DevEnvFactory_ClideProvidedComponentsNotFound" xml:space="preserve">
    <value>The service provider type '{providerType}' specified a provided assembly for components registration '{providedAssembly}' that was not found at '{assemblyFile}'.</value>
  </data>
</root>