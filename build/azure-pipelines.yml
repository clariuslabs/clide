name: clide

trigger:
  batch: false
  branches:
    include:
    - master
    - dev/*
    - feature/*
    - rel/*
    exclude:
    - v*
  paths:
    exclude:
    - docs
    - icon

variables:
- group: Xamarin Release
- group: Xamarin-Secrets
- name: Configuration
  value: Release
- name: DotNetVersion
  value: 3.1.x
- name: PackageOutputPath
  value: $(Build.ArtifactStagingDirectory)/artifacts

resources:
  repositories:
  - repository: templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/master
    endpoint: xamarin

stages:
- stage: Windows
  jobs:
  - job: Build
    pool: VSEng-MicroBuildVS2019
    steps:
    - checkout: self
      clean: true
      submodules: recursive
    - task: UseDotNet@2
      inputs:
        version: $(DotNetVersion)
        performMultiLevelLookup: true
    - script: 'dotnet tool update -g dotnet-format && dotnet format -w $(Build.SourcesDirectory) --dry-run --check -v:diag'
      displayName: Check .editorconfig compliance
    - template: dump-environment.yml@templates

    - task: MSBuild@1
      displayName: Build
      inputs:
        solution: Clide.sln
        msbuildArguments: '-r -bl:$(Build.ArtifactStagingDirectory)/logs/winbuild.binlog'

    - task: VSTest@2
      displayName: 'Test'
      timeoutInMinutes: 5
      inputs:
        testAssemblyVer2: |
          **\*Tests*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        codeCoverageEnabled: true
        runInParallel: false
        rerunFailedTests: true
        rerunMaxAttempts: 5
    
    - task: PublishBuildArtifacts@1
      displayName: 'Logs'
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/logs'
        ArtifactName: logs
    
    - task: PublishBuildArtifacts@1
      displayName: 'Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
        ArtifactName: artifacts

- stage: Mac
  dependsOn: []
  jobs:
  - job: Build
    pool: Hosted Mac Internal
    steps:
    - checkout: self
      clean: true
      submodules: recursive
    - template: dump-environment.yml@templates

    - task: MSBuild@1
      displayName: Build
      inputs:
        solution: Clide.sln
        msbuildArguments: '-r -bl:$(Build.ArtifactStagingDirectory)/logs/macbuild.binlog'
    
    - task: MSBuild@1
      displayName: Test
      inputs:
        solution: Clide.sln
        msbuildArguments: '-t:test -p:TestResultsDir=$(Build.ArtifactStagingDirectory)/test-results/'
    
    - task: PublishTestResults@1
      displayName: 'Publish Tests'
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(TestResultsDirectory)*.xml'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Logs'
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/logs'
        ArtifactName: logs
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
        ArtifactName: artifacts
    
- stage: Deploy
  dependsOn:
  - Windows
  - Mac
  jobs:
  - job: Deploy
    pool: Hosted
    steps:
    - checkout: none
    - script: echo "Done!"
