<Project Sdk="Microsoft.Build.NoTargets/1.0.88" TreatAsLocalProperty="Configuration">
  <Import Project="src\Directory.Build.props" />

  <PropertyGroup>
    <TargetFramework>netstandard1.0</TargetFramework>
    <PackageTargetFallback>net11;net20;net35;net40;net403;net45;net451;net452;net46;net461;net462;net47;net471;netcore;netcore45;netcore451;netcore50;netcoreapp;netcoreapp1.0;netcoreapp2.0;win8;win81;win10;sl4;sl5;wp;wp7;wp75;wp8;wp81;wpa81;uap;uap10;netstandard1.0;netstandard1.1;netstandard1.2;netstandard1.3;netstandard1.4;netstandard1.5;netstandard1.6;netstandard2.0;netcoreapp1.0;netcoreapp2.0;monoandroid;monotouch;monomac;xamarinios;xamarinmac;xamarinpsthree;xamarinpsfour;xamarinpsvita;xamarinwatchos;xamarintvos;xamarinxboxthreesixty;xamarinxboxone</PackageTargetFallback>

    <Configuration Condition="'$(Configuration)' == '' and '$(CI)' == 'true'">Release</Configuration>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>

    <Out Condition=" '$(Out)' == '' ">$(PackageOutputPath)</Out>
    <Out Condition=" '$(Out)' == '' ">$(MSBuildThisFileDirectory)out</Out>

    <CommonBuildProperties>WarningLevel=0;NoWarn=1591;RunCodeAnalysis=false;Configuration=$(Configuration);PackageOutputPath=$(Out);PackOnBuild=false</CommonBuildProperties>
    <CommonBuildProperties Condition="'$(Configuration)' == 'Release' and '$(DeployExtension)' == ''">$(CommonBuildProperties);DeployExtension=false</CommonBuildProperties>

    <Dev Condition="'$(Dev)' == ''">$(VisualStudioVersion)</Dev>

    <!-- Azure-based static NuGet feed -->
    <SleetInit Condition="'$(SleetInit)' == ''">false</SleetInit>
  </PropertyGroup>

  <PropertyGroup>
    <CodeFormatterToolArgs>/additionalFileItemNames:None;Content;VSCTCompile;Page;EmbeddedResource</CodeFormatterToolArgs>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MSBuilder.CI" Version="0.1.2" />
    <PackageReference Include="xunit.runner.msbuild" Version="$(XunitVersion)" />
    <PackageReference Include="xunit.runner.console" Version="$(XunitVersion)" />
    <PackageReference Include="Sleet.Azure" Version="0.2.5" />
    <PackageReference Include="Merq.VisualStudio" Version="$(MerqVisualStudioVersion)" />
    <PackageReference Include="Xamarin.CodeFormatter" Version="*" />
  </ItemGroup>

  <ItemGroup>
    <Solution Include="src\Clide.sln"/>
    <Dev Include="$(Dev)" />
  </ItemGroup>

  <ItemGroup>
    <CodeFormatterSolution Include="@(Solution)" />
  </ItemGroup>

  <Target Name="Clean">
    <Exec Command="rmdir $(Out) /S /Q" Condition="Exists('$(Out)')" ContinueOnError="true" />
    <!-- Remove all bin/obj recursively under /src -->
    <Exec Command='for /d /r . %%d in (bin,obj) do @if exist "%%d" rd /s/q "%%d"' WorkingDirectory='$(MSBuildThisFileDirectory)src' ContinueOnError='true' />
  </Target>

  <!-- Configures the project in preparation for Build. Includes running Restore. -->
  <Target Name="Configure" DependsOnTargets="Restore" />

  <!-- Targets can be documented, and /t:Help will render the help -->
  <Target Name="OnBuild" AfterTargets="Build">
    <MSBuild Projects="src\Clide.Vsix\Clide.Vsix.csproj" Targets="Version" Properties="$(CommonBuildProperties);GitInfoReportImportance=high" />
    <MakeDir Directories="$(Out)" Condition="!Exists('$(Out)')" />
    <MSBuild Projects="@(Solution)" Properties="$(CommonBuildProperties);Dev=%(Dev.Identity)" />
  </Target>

  <Target Name="BeforePush" BeforeTargets="Push">
    <ItemGroup>
      <Package Include="$(Out)\*.nupkg" />
    </ItemGroup>
  </Target>

  <Target Name="Clean" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Restore;Build" />

  <Target Name="AfterRestore" AfterTargets="Restore">
    <MSBuild Projects="%(Solution.FullPath)" Targets="Restore" Properties="$(CommonBuildProperties);RestoreOnly=true" />
  </Target>

  <Target Name="Package">
    <MSBuild Projects="src\Clide.Interfaces\Clide.Interfaces.csproj" Targets="Pack" Properties="$(CommonBuildProperties);BuildProjectReferences=false" />
    <MSBuild Projects="src\Clide.Mac\Clide.Mac.csproj" Targets="Pack" Properties="$(CommonBuildProperties);BuildProjectReferences=false" />
    <MSBuild Projects="src\Clide.Windows\Clide.Windows.csproj" Targets="Pack" Properties="$(CommonBuildProperties);BuildProjectReferences=false" />
  </Target>

  <Target Name="Test">
    <MSBuild Projects="src\Clide.UnitTests\Clide.UnitTests.csproj" BuildInParallel="false" Targets="GetTargetPath" Properties="$(CommonBuildProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="TestAssembly" />
    </MSBuild>

    <xunit Assemblies="@(TestAssembly)" />
  </Target>

  <Target Name="Run">
    <!-- TODO: build + deploy to exp, run VS -->
  </Target>

</Project>
